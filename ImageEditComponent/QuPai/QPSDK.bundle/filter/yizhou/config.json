{
  "filters": [
    {
      "vertex": "\n    attribute vec4 position;\n    attribute vec4 inputTextureCoordinate;\n    attribute vec4 inputTextureCoordinate2;\n\n    varying vec2 textureCoordinate;\n    varying vec2 textureCoordinate2;\n\n    const int GAUSSIAN_SAMPLES = 9;\n    varying vec2 blurCoordinates[GAUSSIAN_SAMPLES];\n    //uniform float texelWidthOffset=1; //半径\n    //uniform float texelHeightOffset=1;\n\n    float texelWidthOffset=1.0/640.0; //半径\n    float texelHeightOffset=1.0/640.0;\n\n    void main()\n    {\n        gl_Position = position;\n        textureCoordinate = inputTextureCoordinate.xy;\n        textureCoordinate2 = inputTextureCoordinate2.xy;\n\n        // Calculate the positions for the blur\n        int multiplier = 0;\n        vec2 blurStep;\n        vec2 singleStepOffset = vec2(texelWidthOffset, texelHeightOffset);\n        for (int i = 0; i < GAUSSIAN_SAMPLES; i++)\n        {\n            multiplier = (i - int(float(GAUSSIAN_SAMPLES - 1) / 2.0));\n            // Blur in x (horizontal)\n            blurStep = float(multiplier) * singleStepOffset;\n            blurCoordinates[i] = textureCoordinate.xy + blurStep;\n        }\n    }\n",
      "name": "yizhou",
      "images": [
        "color.png",
        "color2.png",
        "color3.png",
        "color4.png"
      ],
      "fragment": "\nprecision highp float;\n    uniform  sampler2D inputImageTexture;\n    varying  vec2 textureCoordinate;\n    varying  vec2 textureCoordinate2;\n\n    const lowp int GAUSSIAN_SAMPLES = 9;\n    varying vec2 blurCoordinates[GAUSSIAN_SAMPLES];\n    uniform sampler2D inputImageTexture2;//sucai29\n    uniform sampler2D inputImageTexture3;//sucai28\n    uniform sampler2D inputImageTexture4;//PSOverlay60\n    uniform sampler2D inputImageTexture5;//array\n    vec3 makeCurve(vec3 srcData,sampler2D mapData)\n    {\n        vec3 dstData;\n        dstData.r = texture2D(mapData,vec2(srcData.r,0.5)).r;\n        dstData.g = texture2D(mapData,vec2(srcData.g,0.5)).g;\n        dstData.b = texture2D(mapData,vec2(srcData.b,0.5)).b;\n        return dstData;\n    }\n    vec3 overlayMap(vec3 srcData,sampler2D mapData,sampler2D blendData)\n    {\n        vec3 dstData;\n        vec4 blentex=texture2D(blendData,textureCoordinate);\n        dstData.r = texture2D( mapData, vec2(blentex.r,srcData.r)).r;\n        dstData.g = texture2D( mapData, vec2(blentex.g,srcData.g)).g;\n        dstData.b = texture2D( mapData, vec2(blentex.b,srcData.b)).b;\n        return dstData;\n    }\n\n    void main() {\n        vec4 orgData=texture2D(inputImageTexture,textureCoordinate);\n        lowp vec4 sum = vec4(0.0);\n        sum += texture2D(inputImageTexture, blurCoordinates[0]) * 0.05;\n        sum += texture2D(inputImageTexture, blurCoordinates[1]) * 0.09;\n        sum += texture2D(inputImageTexture, blurCoordinates[2]) * 0.12;\n        sum += texture2D(inputImageTexture, blurCoordinates[3]) * 0.15;\n        sum += texture2D(inputImageTexture, blurCoordinates[4]) * 0.18;\n        sum += texture2D(inputImageTexture, blurCoordinates[5]) * 0.15;\n        sum += texture2D(inputImageTexture, blurCoordinates[6]) * 0.12;\n        sum += texture2D(inputImageTexture, blurCoordinates[7]) * 0.09;\n        sum += texture2D(inputImageTexture, blurCoordinates[8]) * 0.05;\n\n        vec4 middleTex=texture2D(inputImageTexture2,textureCoordinate);\n        vec3 mixData=mix(orgData.rgb,sum.rgb,middleTex.r);\n        mixData=makeCurve(mixData,inputImageTexture5);\n        orgData.rgb=overlayMap(mixData,inputImageTexture4,inputImageTexture3);\n        gl_FragColor = orgData;\n    }\n"
    }
  ],
  "version": 2,
  "animations": [
    {
      "frames": [
        {
          "x": 240.0,
          "track": "a",
          "cx": 240.0,
          "t": 0,
          "y": 240.0,
          "fy": 0.0,
          "fw": 480.0,
          "w": 1.0,
          "fx": 0.0,
          "cy": 240.0,
          "fh": 480.0,
          "a": 0.0,
          "h": 1.0
        },
        {
          "x": 240.0,
          "track": "a",
          "cx": 240.0,
          "t": 449,
          "y": 240.0,
          "fy": 0.0,
          "fw": 480.0,
          "w": 1.0,
          "fx": 0.0,
          "cy": 240.0,
          "fh": 480.0,
          "a": 0.0,
          "h": 1.0
        }
      ],
      "name": "main"
    }
  ],
  "musicName": "",
  "name": "移轴",
  "width": 640,
  "height": 640,
  "music": "music.mp3",
  "effects": [
    {
      "video": "main",
      "src": "",
      "eid": 1
    },
    {
      "src": "1",
      "filterName": "yizhou",
      "eid": 2
    }
  ],
  "time": [
    0
  ],
  "icon": "icon.png",
  "musicIcon": "icon_music.png"
}